# template for nginx.conf file.
# the file will be processed by the postinstall script
# it will insert the correct value for PORT_WWW and then put this
# file in /home/dotcloud/nginx/conf/nginx.conf when done.

# nginx will be managed by supervisord when it starts so we don't need daemon mode
daemon off;

worker_processes 1;

events {
  worker_connections 1024;
}

http {

  lua_code_cache off;
  set oauth_id '@APP_ID@';
  set oauth_secret '@APP_SECRET@';
  set oauth_orgs_whitelist '{"@ORG@": true}'
  set oauth_scope 'repo,user:email,read:org';
  lua_package_path "@HOME@/nginx/lua/?.lua;;";

  include mime.types;
  default_type application/octet-stream;

  sendfile on;
  #tcp_nopush on;

  keepalive_timeout 65;

  gzip on;

  # The app we are proxying to
  upstream production-app { server localhost:@PORT_APP@; }

  # The internal oauth provider
  upstream internal-oauth { server localhost:@PORT_AUTH@; }

  server {
    # PORT_WWW value is added via postinstall script. DON'T TOUCH unless you know what you are doing or it may not work.
    listen  @PORT_WWW@ default;

    encrypted_session_expires 500;
    encrypted_session_key '@ENCRYPTED_SESSION_KEY@';
    encrypted_session_iv '@ENCRYPTED_SESSION_IV@';

    server_name localhost;

    log_format combined-realip '$remote_addr ($http_x_real_ip) - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';
    access_log /var/log/supervisor/nginx_access.log combined-realip;
    error_log /var/log/supervisor/nginx_error.log info;

    root @HOME@/current/static;

    error_page 404 @404;
    error_page 500 @500;
    error_page 502 @502;
    error_page 503 @503;
    error_page 504 @504;

    # make these better next
    # location @404 { rewrite ^ /static/404.html; }
    # location @500 { rewrite ^ /static/500.html; }
    # location @502 { rewrite ^ /static/502.html; }
    # location @503 { rewrite ^ /static/503.html; }
    # location @504 { rewrite ^ /static/504.html; }

    location @404 { rewrite ^ http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#404; }
    location @500 { rewrite ^ http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#500; }
    location @502 { rewrite ^ http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#502; }
    location @503 { rewrite ^ http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#503; }
    location @504 { rewrite ^ http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#504; }


    location /static { alias @HOME@/current/static; }
    location /robots.txt { alias @HOME@/current/static/robots.txt; }
    location /favicon.ico { alias @HOME@/current/static/favicon.ico; }

    # DO THE AUTH SUTFF!
    # This will run for everything but subrequests

    lua_need_request_body on;
    access_by_lua_file "@HOME@/nginx/lua/access.lua";

    location / {
      if ( -f @HOME@/current/maintenance) {
        return 503;
      }

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_max_temp_file_size 0;

      if (!-f $request_filename) {
        proxy_pass http://production-app;
        break;
      }
    }

    include @HOME@/current/*nginx.conf;
  }
}
